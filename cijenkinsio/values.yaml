# Default values for cijenkinsio.
#
jenkins:
  persistence:
    enabled: true
    size: 100Gi
  controller:
    tag: "2.249.3-lts"
    JCasC:
      enabled: true
      configScripts:

        no-executors: |
          jenkins:
            numExecutors: 0

        matrix-settings: |
          jenkins:
            authorizationStrategy:
              loggedInUsersCanDoAnything:
                allowAnonymousRead: true
 
        jobs-settings: |
          jobs:
            - script: >
                multibranchPipelineJob('testrepo1') {
                  displayName "Test Repo 1"
                  description "Test Repo 1"
                  branchSources {
                    github {
                      id('2019081602')
                      //scanCredentialsId('github-access-token')
                      repoOwner('garethjevans')
                      repository('test-repo1')
                      includes('main')
                    }
                  }
                  factory {
                    workflowBranchProjectFactory {
                      scriptPath('Jenkinsfile')
                    }
                  }
                }
 
        pipeline-library: |
          unclassified:
            globalLibraries:
              libraries:
                - defaultVersion: "master"
                  implicit: true
                  name: "pipeline-library"
                  retriever:
                    modernSCM:
                      scm:
                        git:
                          #id: "github-access-token"
                          remote: "https://github.com/jenkins-infra/pipeline-library.git"
        location: |
          unclassified:
            location:
              adminAddress: "nobody@jenkins.io"
              url: "https://ci.jenkins.io"

        k8s-settings: |
          jenkins:
            clouds:
              - kubernetes:
                  containerCapStr: "100"
                  jenkinsTunnel: "jenkins-infra-agent:50000"
                  jenkinsUrl: "http://jenkins-infra:8080"
                  maxRequestsPerHostStr: "300"
                  name: "kubernetes"
                  namespace: "jenkins-infra"
                  podRetention: "Never"
                  serverUrl: "https://kubernetes.default"
                  podLabels:
                    # Required to be jenkins/<helm-release>-jenkins-slave as definede here
                    # https://github.com/helm/charts/blob/ef0d749132ecfa61b2ea47ccacafeaf5cf1d3d77/stable/jenkins/templates/jenkins-master-networkpolicy.yaml#L27
                    - key: "jenkins/jenkins-infra-agent"
                      value: "true"
                  templates:
                    - name: jnlp-linux
                      nodeSelector: "kubernetes.io/os=linux"
                      containers:
                        - name: jnlp
                          image: "jenkins/inbound-agent:latest-jdk11"
                          resourceLimitCpu: "500m"
                          resourceLimitMemory: "512Mi"
                          resourceRequestCpu: "500m"
                          resourceRequestMemory: "512Mi"
                          args: "^${computer.jnlpmac} ^${computer.name}"
                          alwaysPullImage: true
                    - name: jnlp-windows
                      nodeSelector: "kubernetes.io/os=windows"
                      containers:
                        - name: jnlp
                          image: "jenkins4eval/jnlp-agent:latest-windows"
                          resourceLimitCpu: "500m"
                          resourceLimitMemory: "512Mi"
                          resourceRequestCpu: "500m"
                          resourceRequestMemory: "512Mi"
                          args: "^${computer.jnlpmac} ^${computer.name}"
                          alwaysPullImage: true
                      yaml: |-
                        spec:
                          tolerations:
                          - key: "os"
                            operator: "Equal"
                            value: "windows"
                            effect: "NoSchedule"

    overwritePlugins: true  
    installPlugins:
      - ansicolor
      - antisamy-markup-formatter
      - authentication-tokens
      - basic-branch-build-strategies
      - blueocean
      - blueocean-autofavorite
      - blueocean-commons
      - blueocean-config
      - blueocean-core-js
      - blueocean-dashboard
      - blueocean-display-url
      - blueocean-events
      - blueocean-git-pipeline
      - blueocean-github-pipeline
      - blueocean-i18n
      - blueocean-jira
      - blueocean-jwt
      - blueocean-personalization
      - blueocean-pipeline-api-impl
      - blueocean-pipeline-editor
      - blueocean-pipeline-scm-api
      - blueocean-rest
      - blueocean-rest-impl
      - blueocean-web
      - branch-api
      - build-name-setter
      - config-file-provider
      - configuration-as-code
      - credentials
      - credentials-binding
      - extended-read-permission
      - git
      - git-client
      - github
      - github-api
      - github-branch-source
      - github-checks
      - inline-pipeline
      - jira
      - job-dsl
      - junit
      - kubernetes
      - ldap
      - lockable-resources
      - pipeline-utility-steps
      - matrix-auth
      - matrix-project
      - pipeline-build-step
      - pipeline-graph-analysis
      - pipeline-input-step
      - pipeline-milestone-step
      - pipeline-model-api
      - pipeline-model-definition
      - pipeline-model-extensions
      - pipeline-rest-api
      - pipeline-stage-step
      - pipeline-stage-tags-metadata
      - pipeline-stage-view
      - plain-credentials
      - prometheus
      - scm-api
      - script-security
      - ssh-agent
      - ssh-credentials
      - support-core
      - token-macro
      - variant
      - warnings-ng
      - workflow-aggregator
      - workflow-api
      - workflow-basic-steps
      - workflow-cps
      - workflow-cps-global-lib
      - workflow-durable-task-step
      - workflow-job
      - workflow-multibranch
      - workflow-scm-step
      - workflow-step-api
      - workflow-support
      - javadoc
      - metrics


    ingress:
      enabled: true
      apiVersion: "networking.k8s.io/v1beta1"

